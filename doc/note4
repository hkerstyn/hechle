-- constant
def x

-- variable
let x

-- type constraint
def x:Num

-- atom
def True

-- assignment
def x = 4

-- newtype
def Even Num

-- alias
def Bool = True/False

-- function
def f x y
def f x:Num y:Num -> Num

-- type constructor
def Some T

-- parameter
def<T> x<T>

-- single-letter type names
-- are implicitly parameters
def zero:T

-- context sensitive parameter inferrence
print 5+zero

-- trait definition
-- list of values that need to be defined
def T:Add = zero:T, add:(T, T)->T



-- example
def None
def Some T
def Maybe T = None / Some T 
def T:Iter<U> =
	next:(T)->Maybe U 

def NaturalIter &Num
-- pattern matches NaturalIter &Num such that x:&Num
def next(NaturalIter x) = Some ^x += 1
&5 | NaturalIter | each print 	-- 5 6 7 8 9 10 ...

