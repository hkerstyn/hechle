-- defines a new symbol
def Symbol:Type

-- adds an implementation to a Symbol
impl Symbol = ExpressionOfType

-- these two can be combined into one
def Symbol:Type = ExpressionOfType

-- in this case, :Type can be omitted if it is inferred
def five = 5

-- if no implementation is given, type is inferred to be ()
def OpaqueNewType
def opaque_new_value :OpaqueNewType

-- type constructors can be defined with their argument
-- on the lhs
def Maybe = T => Some<T> / None
def Maybe<T> = Some<T> / None
def zero<T>:T 

-- defining a value x of Type T is the same as implementing
-- the constructor (x:_) for T
impl x:T = x = some_t



