def main = fn:
	range 1, 100
	each i =>::
	if 3.divides i:
		"fizz"
	if 5.divides i:
		"buzz"
	>> lift<Maybe> join delim="_"
	else i.to
	print


def None
def Some T
def Maybe T = Some T / None



def f(x):Num -> Maybe<Num> = fn:
	if x > 0:
		Some x
	else:
		

def if : (Bool, T) -> Maybe<T>:
	b, t => match b:
		True => Some t 
		False => None



def T _:Functor =
	fmap<T,U,V>:(U->V) -> (T U -> T V)

def as_mult:Add->Mult = fn:
	derive Mult
		def one = zero
		def mult = add

export as_mult

def f = fn:
	if a , b:
		fjsdlfjsl
	fsdlkfsd
	fsdjifdslk
	fdsjplk